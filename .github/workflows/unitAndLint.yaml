name: unitTestsAndLint

on:
  push:
    # Only run if there are changes to Python code or related configurations
    paths:
      - "**.py"
      - "**.yaml"
      - "**.toml"
      - ".flake8"
      - "Pipfile"
      - "Pipfile.lock"
    branches:
      - main
  pull_request:
    # Only run if there are changes to Python code or related configurations
    paths:
      - "**.py"
      - "**.yaml"
      - "**.toml"
      - ".flake8"
      - "Pipfile"
      - "Pipfile.lock"
    branches:
      - main


jobs:

  unitTests:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/setup-python
      - name: Install Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install pipenv
        run: |
          pip install --upgrade pip
          pip install pipenv

      # https://github.com/actions/checkout
      - uses: actions/checkout@v4

      - name: Install Python dependencies
        run: |
          pipenv sync --dev

      - name: Test with pytest
        run: |
          mkdir test-reports
          pipenv run pytest -v --junitxml=test-reports/junit.xml

      # https://github.com/actions/upload-artifact
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: unitTest-report
          path: test-reports/junit.xml
        # Use always() to always run this step to publish test results when
        # there are test failures
        if: always()


  lint:
    runs-on: ubuntu-latest
    steps:

      # https://github.com/actions/setup-python
      - name: Install Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install pipenv
        run: |
          pip install --upgrade pip
          pip install pipenv

      # https://github.com/actions/checkout
      - uses: actions/checkout@v4

      - name: Install Python dependencies
        run: |
          pipenv sync --dev

      - name: Testing with flake8
        run: |
          mkdir test-reports
          pipenv run flake8 ./ --output-file test-reports/flake8

      - name: Testing with black
        run: |
          pipenv run black --check ./

      # https://github.com/actions/upload-artifact
      - name: Upload flake test results
        uses: actions/upload-artifact@v4
        with:
          name: flake-report
          path: test-reports/flake8
        # Use failure() to upload only if failure occurs
        if: failure()
